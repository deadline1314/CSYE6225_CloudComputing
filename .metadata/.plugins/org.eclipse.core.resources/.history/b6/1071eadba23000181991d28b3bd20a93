package org.neu.ruotwang.courseservice1.database;

import java.util.HashMap;
import java.util.Map;

import com.amazonaws.auth.profile.ProfileCredentialsProvider;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;
import com.amazonaws.services.dynamodbv2.model.AttributeDefinition;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;
import com.amazonaws.services.dynamodbv2.model.CreateTableRequest;
import com.amazonaws.services.dynamodbv2.model.KeySchemaElement;
import com.amazonaws.services.dynamodbv2.model.KeyType;
import com.amazonaws.services.dynamodbv2.model.ProvisionedThroughput;
import com.amazonaws.services.dynamodbv2.model.PutItemRequest;
import com.amazonaws.services.dynamodbv2.model.PutItemResult;
import com.amazonaws.services.dynamodbv2.model.ScalarAttributeType;
import com.amazonaws.services.dynamodbv2.util.TableUtils;

public class DynamoDBExample {
	
	static AmazonDynamoDB dynamoDB;
	
	private static void init() throws Exception {
		
		ProfileCredentialsProvider credentialsProvider = new ProfileCredentialsProvider();
		
		credentialsProvider.getCredentials();
		
		dynamoDB =  AmazonDynamoDBClientBuilder.standard()
				.withCredentials(credentialsProvider)
				.withRegion("us-west-2")
				.build();
	}
	
	public static void main(String[] args) throws Exception {
		init();
		String tableName = "test-table-1";
		
		CreateTableRequest createTableRequest = new CreateTableRequest()
				.withTableName(tableName)
				.withKeySchema(
						new KeySchemaElement()
						.withAttributeName("name")
						.withKeyType(KeyType.HASH))
				.withAttributeDefinitions(
						new AttributeDefinition()
						.withAttributeName("address")
						.withAttributeType(ScalarAttributeType.S),
						new AttributeDefinition()
						.withAttributeName("phone")
						.withAttributeType(ScalarAttributeType.S))
				.withProvisionedThroughput(
						new ProvisionedThroughput()
						.withReadCapacityUnits(2L)
						.withWriteCapacityUnits(2L));
		
		
		TableUtils.createTableIfNotExists(dynamoDB, createTableRequest);
		TableUtils.waitUntilActive(dynamoDB, tableName);
		
		
		Map<String, AttributeValue> item = new HashMap<>();
		item.put("chipotle", new AttributeValue().withS("500 john street"));
		
		PutItemRequest putItemRequest = new PutItemRequest(tableName, item);
		PutItemResult putItemResult = dynamoDB.putItem(putItemRequest);

	}
}
